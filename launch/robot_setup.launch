<!-- robot_setup.launch -->

<launch>
  <arg name="namespace"         default="" />
  <arg name="start_nodes_topic" default="" />
  <arg name="end_nodes_topic"   default="" />
  <arg name="x_pos" default="0.0" />
  <arg name="y_pos" default="0.0" />
  <arg name="yaw"   default="0.0" />

  <arg name="address" default="" />
  <arg name="env-loader" default="" />

  <param name="odom_frame" value="$(arg namespace)/odom"           />
  <param name="base_frame" value="$(arg namespace)/base_footprint" />

  <include file="$(find turtlebot_launch)/launch/include/description.launch.xml" >
    <arg name="model"           value="waffle_pi"         />
    <arg name="robot_tf_prefix" value="$(arg namespace)/" />
  </include>

  <machine name="$(arg namespace)" address="$(arg address)" env-loader="$(arg env-loader)" />

  <include file="$(find node_server_core)/launch/ros_node_server.launch" >
    <arg name="start_node_list_srv_topic" value="$(arg start_nodes_topic)" />
    <arg name="kill_srv_topic"            value="$(arg end_nodes_topic)"   />
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <node pkg="robot_localization" type="ekf_localization_node" name="odom_filter" output="screen" >
    <rosparam sub_val="true">
      frequency: 30
      sensor_timeout: 1
      two_d_mode: true
      <!-- Add frames if needed -->
      <!-- From Mocap -->
      pose0: pose
      pose0_config:
        [true,  true,  true,
         true,  true,  true,
         false, false, false,
         false, false, false,
         false, false, false]
      pose0_queue_size: 50
      pose0_differential: true
      initial_state:
        [$(arg x_pos), $(arg y_pos), 0.0,
         0.0,          0.0,          $(arg yaw),
         0.0,          0.0,          0.0,
         0.0,          0.0,          0.0,
         0.0,          0.0,          0.0]
      publish_tf: true
      print_diagnostics: false
      use_control: true
      stamped_control: true
      control_timeout: 1
      control_config:
        [true, true, true,
         true, true, true]
      smooth_lagged_data: true
      history_length: 5
      dynamic_process_noise_covariance: true
    </rosparam>
    <remap from="odometry/filtered" to="odom" />
  </node>

  <node pkg="rosserial_python" type="serial_node.py" name="turtlebot3_core" output="screen" machine="$(arg namespace)">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="115200"/>
    <param name="tf_prefix" value="$(arg namespace)"/>
    <remap from="/$(arg namespace)/cmd_vel" to="/cmd_vel"/>
  </node>

  <node pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="diagnostics" output="screen" machine="$(arg namespace)"/>

</launch>
