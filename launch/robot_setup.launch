<!-- robot_setup.launch -->

<launch>
  <arg name="namespace"         default="" />

  <arg name="address"    default="" />
  <arg name="env-loader" default="~/catkin_ws/env.sh" />
  <arg name="user"       default="" />

  <param name="odom_frame" value="$(arg namespace)/odom"           />
  <param name="base_frame" value="$(arg namespace)/base_footprint" />

  <include file="$(find turtlebot_launch)/launch/include/description.launch.xml" >
    <arg name="model"           value="waffle_pi"         />
    <arg name="robot_tf_prefix" value="$(arg namespace)/" />
  </include>

  <machine name="$(arg namespace)" address="$(arg address)" user="$(arg user)" env-loader="$(arg env-loader)" password="turtlebot" />

  <include file="$(find mocap_interface)/launch/odom_generator.launch" />

  <include file="$(find mocap_interface)/launch/mocap_to_map_tf.launch" >
    <arg name="robot_odom_topic" value="odom" />
    <arg name="map_frame"        value="map"                   />
    <arg name="odom_frame"       value="$(arg namespace)/odom" />
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <node pkg="rosserial_python" type="serial_node.py" name="turtlebot3_core" output="screen" machine="$(arg namespace)" if="true" >
    <param name="port"      value="/dev/ttyACM0"/>
    <param name="baud"      value="115200"/>
    <param name="tf_prefix" value="$(arg namespace)"/>
    <remap from="odom" to="odom_raw" />   
  </node>

  <node pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="diagnostics" output="screen" machine="$(arg namespace)"/>

</launch>
